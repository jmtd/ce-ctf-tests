#!/bin/sh
set -u
set -e

# runtests: wrapper script to invoke ctf-cli.py
# usage: runtests <image name> <path to feature file>
#
# this script presumes we want to test an already-built image using
# features described in a single feature file. It hides the details
# of preparing the test directories, files and environment from you.


# Presume ctf-cli is checked out in $HOME. Override by defining
# the 'cli' environment variable to point at ctf-cli.py
cli=${CLI-$HOME/ctf-cli/ctf-cli.py}

die() {
    echo $@>&2
    exit 1
}
usage() {
    echo "usage: $0 <docker-image-to-test> <feature-file-to-test> [ feature-files ... ]"
}
if [ $# -lt 2 ]; then
    usage >&2
    exit 1
fi

image="$1"
testf="$2"

# pre-flight checks
docker inspect "$image" >/dev/null # valid image?
[ -f "$testf" ] || die "Not a feature file: $testf"
[ -f "$cli" ] || [ -f `which $cli` ] || die "$cli does not exist. You can override this path by defining the 'cli' environment variable."

# find the root of the jboss-dockerfiles repository (needed for ../tools/ci/ctf.conf)
# XXX: assumes that the test file is in that directory somewhere, which it might not be
pushd $(dirname "$testf") >/dev/null
repo="$(git rev-parse --show-toplevel)"
popd >/dev/null

# working directory
workdir=$(mktemp -td runtests_XXXXXX)
cleanup() {
    if [ -n "$workdir" ]; then
        rm -r "$workdir"
    fi
}
trap cleanup EXIT

# set up testing environment
# XXX: assumes ce-ctf-tests is in jboss-dockerfiles repo. Could be anywhere.
if [ -d "$repo/ce-ctf-tests" ]; then
  cp -a "$repo/ce-ctf-tests/tests" "$workdir/tests"
else
  die "couldn't find ce-ctf-tests (tried $repo/ce-ctf-tests)"
fi
mkdir -p "$workdir/tests/features"

# set up tests
shift
while [ $# -gt 0 ]; do
    testf="$1"
    [ -f "$testf" ] || die "Not a feature file: $testf"
    dest="$workdir/tests/features/$(basename "$testf")"
    cp "$testf" "$dest"
    shift
done

pushd "$workdir" >/dev/null
if [ ! -d "$repo/unit" ] ; then
    mkdir $repo/unit
fi
"$cli" -v -i "$image" -c "$repo/tools/ci/ctf.conf" -j$repo/unit \
       -f /dev/null # hack to get around specifying a Dockerfile, thanks Marek
popd >/dev/null
